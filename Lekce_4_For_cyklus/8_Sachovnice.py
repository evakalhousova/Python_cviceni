# V t√©to √∫loze vytvo≈ô program, kter√Ω vyp√≠≈°e ≈°achovnici (st≈ô√≠d√°n√≠ ƒçern√Ωch '#' a b√≠l√Ωch ' ' pol√≠).
# Jednotliv√© kroky, kter√© program mus√≠ obsahovat:
# Vytvo≈ô tyto vstupn√≠ promƒõnn√©:
# velikost = 10
# sachovnice = []
# symboly = ['#',' ']
# iteruj p≈ôes jednotliv√© ≈ô√°dky ≈°achovnice (velikost),
# v ka≈æd√©m kroku iterace vytvo≈ô promƒõnnou rada,
# n√°slednƒõ iteruj p≈ôes jednotliv√© bu≈àky,
# vytvo≈ô pomocnou promƒõnnou index, kter√° vybere pomoc√≠ promƒõnn√© symbols aktu√°ln√≠ pozici, (a≈• vytvo≈ô√≠≈° st≈ô√≠davƒõ pole " " a "#"),
# postupnƒõ p≈ôid√°vej jednotliv√© symboly do promƒõnn√© rada,
# na konci ≈ô√°dku p≈ôidej rada do promƒõnn√© sachovnice,
# na z√°vƒõr spoj jednotliv√© hodnoty v promƒõnn√© sachovnice pomoc√≠ \n a vypi≈° jej√≠ obsah.

velikost = 10
sachovnice = []
symboly = ['#',' ']

for radek in range(velikost):
    rada = []
    if radek % 2 == 0:
        for bunka in range(velikost):               # Dal≈°√≠ iterace range(velikost)
            if bunka % 2 == 0:
                index = symboly[0]
            else:
                index = symboly[1]
            rada.append(index)
    else:
        for bunka in range(velikost):
            bunka = bunka + 1
            if bunka % 2 == 0:
                index = symboly[0]
            else:
                index = symboly[1]
            rada.append(index)
    sachovnice.append(rada)

for radek in sachovnice:
    print(''.join(radek))                           # Tady jsem na to nemohla p≈ôij√≠t.


# Moje krat≈°√≠ ≈ôe≈°en√≠:

velikost = 10
sachovnice = []
symboly = ['#',' ']

for radek in range(velikost):
    rada = []
    if radek % 2 == 0:
        for bunka in range(velikost):               # Dal≈°√≠ iterace range(velikost)
            index = symboly[bunka % 2]
            rada.append(index)
    else:
        for bunka in range(velikost):
            bunka = bunka + 1
            index = symboly[bunka % 2]
            rada.append(index)
    sachovnice.append(rada)

for radek in sachovnice:
    print(''.join(radek))                           # Tady jsem na to nemohla p≈ôij√≠t.


# Jin√© ≈ôe≈°en√≠ - Milan:
def sachovnice():
    size = 10
    symbols = ['‚¨õ', 'üü©']
    for row in range(size):
        for col in range(size):
            print(symbols[(row + col) % 2], end='')
        print()
sachovnice()


# Jin√© ≈ôe≈°en√≠ - Engeto:

velikost = 10
symboly = ['#',' ']
sachovnice = []
# Iteruj p≈ôes ≈ô√°dky ≈°achovnice a vytvo≈ô promƒõnnou "rada"
for radek in range(velikost):
    rada = []
    # Iteruj p≈ôes jednotliv√© bu≈àky v ka≈æd√©m ≈ô√°dku
    for bunka in range(velikost):
        # Vytvo≈ô index, kter√Ω vybere jednu z hodnot v promƒõnn√© "symboly"
        index = (radek + bunka) % len(symboly)
        rada.append(symboly[index])
    # P≈ôidej hotov√© bu≈àky do promƒõnn√© "sachovnice"
    sachovnice.append(''.join(rada))
# Vypi≈° v√Ωslednou ≈°achovnici
print('\n'.join(sachovnice))
